#BlueJ class context
comment0.target=Math
comment0.text=\n\ Klasse\ die\ simple\ Mathematische\ Methoden\ anbietet.\n\ \n\ @author\ Jannik\ Adam\n\ @author\ Fromm-Borys\n\ @version\ 2.0\n
comment1.params=
comment1.target=Math()
comment1.text=\n\ Leerer\ Konstruktor\ zum\ Verhindern\ des\ Erstellens\ eines\ Unsinnigen.\n
comment10.params=a\ b\ c
comment10.target=long[]\ fillTripple(long,\ long,\ long)
comment10.text=\n\ Methode\ die\ die\ uebergebenen\ Parameter\ in\ ein\ Array\ mit\ 3\ elementen\n\ einpflegt.<br>\n\ Die\ Elemente\ werden\ in\ der\ Reihenfolge\ "a,b,c\ abgelegt"\n\ \n\ @param\ a\n\ \ \ \ \ \ \ \ \ \ \ \ erster\ Wert\ es\ Arrays\n\ @param\ b\n\ \ \ \ \ \ \ \ \ \ \ \ zweiter\ Wert\ es\ Arrays\n\ @param\ c\n\ \ \ \ \ \ \ \ \ \ \ \ dritter\ Wert\ es\ Arrays\n\ @return\ Array,\ dass\ die\ uebergebenen\ Werte\ in\ der\ Reihnfolge\ a,b,c\n\ \ \ \ \ \ \ \ \ enth\u00E4lt.\n
comment11.params=n\ x
comment11.target=double\ berechneSumme(long,\ double)
comment11.text=\n\ Methode\ zum\ berechnen\ der\ Summe\ von\ i\=1\ bis\ n\ \:\ ((x-1)^i)/(i*(x^i))\n\ \n\ @param\ n\n\ \ \ \ \ \ \ \ \ \ \ \ Wert\ von\ n\ der\ Formel\n\ \n\ @param\ x\n\ \ \ \ \ \ \ \ \ \ \ \ Wert\ von\ x\ der\ Formel\n
comment2.params=teilerSummenZahl
comment2.target=int\ berechneTeilerSumme(int)
comment2.text=\n\ Methode,\ die\ die\ Teilersumme\ einer\ naturlichen\ Zahl\ berechnet.\n\ \n\ @param\ teilerSummenZahl\n\ \ \ \ \ \ \ \ \ \ \ \ Die\ Zahl\ von\ der\ die\ Teilersumme\ berechnet\ werden\ soll.\n\ @return\ String,\ der\ errechneten\ Teilersumme.\n
comment3.params=isbn
comment3.target=java.lang.String\ berechnePrufZifferISBN_10(long)
comment3.text=\n\ Methode\ die\ aus\ den\ ersten\ neun\ Ziffern\ einer\ ISBN-10\ die\ Prufziffer\n\ errechent.\n\ <p>\n\ \n\ Eine\ ISBN\ 10\ besteht\ aus\ 9\ zahlen\ von\ [0-9]\ und\ der\ Pr\u00C3\u00BCfziffer\n\ [0-9,x],\ die\ hier\ berechnet\ wird.<br>\n\ Uebergeben\ werden\ hier\ lediglich\ die\ ersten\ 9\ stellen\ der\ ISBN\n\ <p>\n\ Zu\ beachten\ ist,\ dass\ 0\ an\ jeder\ Stelle\ erlaubt\ ist,\ und\ daher\n\ f\u00C3\u00BChrende\ 0en\ gestattet\ sind\!<br>\n\ \n\ @param\ isbn\n\ \ \ \ \ \ \ \ \ \ \ \ long,\ das\ die\ ersten\ neun\ Stellen\ einer\ ISBN-10\n\ \ \ \ \ \ \ \ \ \ \ \ beinhaltet.\n\ @return\ String,\ der\ Prufziffer\ einer\ ISBN-10.\n
comment4.params=faktorP\ summandQ
comment4.target=java.lang.String\ berechneNullStellenEinerQuadratischenGleichung(double,\ double)
comment4.text=\n\ Methode\ zum\ ermitteln\ der\ Nullstellen\ einer\ quadratischen\ funktion\n\ der\ Form\ f(x)\=X^2+px+q.\n\ \n\ @param\ faktorP\n\ \ \ \ \ \ \ \ \ \ \ \ double,\ Variable\ p\ einer\ quadratischen\ Gleichung.\n\ @param\ summandQ\n\ \ \ \ \ \ \ \ \ \ \ \ double,\ Variable\ q\ einer\ quadratischen\ Gleichung.\n\ @return\ String,\ der\ Nullstellen\ einer\ quadratischen\ Gleichung.\n
comment5.params=number
comment5.target=double\ roundToPrecision(double)
comment5.text=\n\ Methode\ zum\ Runden\ von\ double\ zahlen\ auf\ eine\ Festgelegte\n\ Prezision<br>\n\ \n\ @param\ number\n\ \ \ \ \ \ \ \ \ \ \ \ die\ gerundet\ werden\ soll\n\ @return\ die\ gerundete\ Zahl\n
comment6.params=faktorP\ summandQ\ zweiNullStellen
comment6.target=double\ pQFormel(double,\ double,\ boolean)
comment6.text=\n\ Methode\ zum\ Anwenden\ der\ p-q-Formel\n\ \n\ @param\ p\n\ \ \ \ \ \ \ \ \ \ \ \ double,\ Variable\ p\ einer\ quadratischen\ Gleichung.\n\ @param\ q\n\ \ \ \ \ \ \ \ \ \ \ \ double,\ Variable\ q\ einer\ quadratischen\ Gleichung.\n\ @param\ zweiNullStellen\n\ \ \ \ \ \ \ \ \ \ \ \ boolean\ Ausdruck\ der\ angibt\ ob\ die\ funktion\ eine\ oder\n\ \ \ \ \ \ \ \ \ \ \ \ zwei\ Nullstellen\ hat.\n\ @return\ String,\ der\ Nullstellen\ der\ quadratischen\ Gleichung.\n\ @throws\ IllegalArgumentException\n\ \ \ \ \ \ \ \ \ \ \ \ \ falls\ das\ Ergebniss\ NaN\ ist\n
comment7.params=schrankeMAX
comment7.target=long[][]\ berechneTripel(long)
comment7.text=\n\ Methode\ zum\ Berechnen\ von\ Zahlentripel\ die\ die\ Gleichung\ a^3+b^3\=c^2\n\ erfuellen.\n\ \n\ @param\ schrankeMax\n\ \ \ \ \ \ \ \ \ \ \ \ vom\ Nutzer\ eingegebener\ Grenzwert\ den\ die\ Variable\ c\n\ \ \ \ \ \ \ \ \ \ \ \ nicht\ erreichen\ darf.\n\ \n\ @return\ ein\ Array\ der\ Tripel\ die\ die\ Gleichung\ loesen.\n\ \n\ @throws\ IllegalArgumentException\n\ \ \ \ \ \ \ \ \ \ \ \ \ Falls\ die\ uebergebene\ Schranke\ keine\ natuerliche\ Zahl\n\ \ \ \ \ \ \ \ \ \ \ \ \ ist.\n
comment8.params=arr\ increase
comment8.target=long[][]\ arrayVergr\u00F6\u00DFern(long[][],\ int)
comment8.text=\n\ Diese\ Methode\ dient\ dazu,\ ein\ array\ um\ beliebig\ viele\ Pl\u00E4tze\ zu\n\ vergr\u00F6\u00DFern<br>\n\ \n\ @param\ arr\n\ \ \ \ \ \ \ \ \ \ \ \ Array\ das\ zu\ vergr\u00F6\u00DFern\ ist\n\ @param\ increase\n\ \ \ \ \ \ \ \ \ \ \ \ Anzahl\ der\ Elememnte,\ die\ hinzugef\u00FCgt\ werden\ sollen\n\ @return\ das\ vergr\u00F6\u00DFerte\ Array\n
comment9.params=a\ c
comment9.target=double\ berechneB(long,\ long)
comment9.text=\n\ Methode\ zum\ berechnen\ der\ 3.Wurzel\ von\ (a\ -\ b).<br>\n\ \n\ @param\ a\n\ \ \ \ \ \ \ \ \ \ \ \ Minuend\ der\ Formel\ cbrt(a-b)\n\ \n\ @param\ b\n\ \ \ \ \ \ \ \ \ \ \ \ Subtrahend\ der\ Formel\ cbrt(a-b)\n\ \n\ @return\ Wert\ der\ der\ Variable\ b\ der\ Gleichung.\n
numComments=12
